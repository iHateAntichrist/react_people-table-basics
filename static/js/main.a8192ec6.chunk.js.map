{"version":3,"sources":["components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PeoplePageList/PeoplePageList.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","navigation/navigation.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","parentLink","parent","to","slug","classNames","sex","name","PeoplePageList","people","useParams","NeededSlug","map","person","href","born","died","mother","motherName","father","fatherName","PeoplePage","useState","setPeople","isLoading","setIsLoading","error","setError","isNoPeopleMessage","length","findParents","find","p","fetchPeople","peopleFromServer","preparedPeople","useEffect","isPeople","PageNotFound","Navigation","role","isActive","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.a8192ec6.chunk.js","sourcesContent":["export const HomePage = () => (\n  <div className=\"container\">\n    <h1 className=\"title\">Home Page</h1>\n  </div>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  people: Person[],\n};\n\nconst parentLink = (parent: Person) => (\n  <Link\n    to={`/people/${parent.slug}`}\n    className={classNames({\n      'has-text-danger': parent.sex === 'f',\n    })}\n  >\n    {parent.name}\n  </Link>\n);\n\nexport const PeoplePageList: React.FC<Props> = ({ people }) => {\n  const { slug: NeededSlug = '' } = useParams();\n\n  return (\n    <>\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {people.map((person: Person) => (\n            <tr\n              data-cy=\"person\"\n              key={person.slug}\n              className={classNames({\n                'has-background-warning': NeededSlug === person.slug,\n              })}\n            >\n              <td>\n                <a\n                  href=\"#/people/jan-van-brussel-1714\"\n                  className={classNames({\n                    'has-text-danger': person.sex === 'f',\n                  })}\n                >\n                  {person.name}\n                </a>\n              </td>\n\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                {person.mother ? (\n                  parentLink(person.mother)\n                ) : (\n                  person.motherName\n                )}\n              </td>\n              <td>\n                {person.father ? (\n                  parentLink(person.father)\n                ) : (\n                  person.fatherName\n                )}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-shadow */\nimport { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types/Person';\nimport { getPeople } from '../../api';\nimport { PeoplePageList } from '../PeoplePageList/PeoplePageList';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const isNoPeopleMessage = !isLoading && !people.length;\n\n  const findParents = (people: Person[]) => {\n    return people.map((person) => ({\n      ...person,\n      mother: people.find(p => p.name === person.motherName),\n      father: people.find(p => p.name === person.fatherName),\n    }));\n  };\n\n  const fetchPeople = async () => {\n    try {\n      setIsLoading(true);\n      const peopleFromServer = await getPeople();\n      const preparedPeople = findParents(peopleFromServer);\n\n      setPeople(preparedPeople);\n    } catch {\n      setError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchPeople();\n  }, []);\n\n  const isPeople = !isLoading && people.length;\n\n  return (\n    <div className=\"container\">\n      <div className=\"block\">\n        <h1 className=\"title\">People Page</h1>\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n          {isPeople && (\n            <>\n              {error && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {isNoPeopleMessage && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n              <PeoplePageList people={people} />\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigation = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => (classNames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            }))}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => (classNames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            }))}\n            to=\"people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { PageNotFound } from './components/NotFoundPage/NotFoundPage';\nimport { Navigation } from './navigation/navigation';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <main className=\"section\">\n      <Routes>\n        <Route path=\"*\" element={<PageNotFound />} />\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n      </Routes>\n\n      <Navigation />\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}